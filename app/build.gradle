apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

Properties localProps = new Properties()
if (project.rootProject.file('local.properties').canRead()) {
    localProps.load(new FileInputStream(project.rootProject.file('local.properties')))
} else {
    System.err.println("local.properties file is missing, please create it.")
}

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "co.zsmb.rainbowcake.guardiandemo"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField 'String', 'GUARDIAN_API_BASE_URL', "\"https://content.guardianapis.com/\""
        buildConfigField 'String', 'GUARDIAN_API_KEY', "\"" + localProps['guardian.apikey'] + "\""

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.incremental": "true"]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    android {
        packagingOptions {
            exclude 'META-INF/atomicfu.kotlin_module'
        }
    }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'com.google.android.material:material:1.1.0'

    // RainbowCake
    def rainbow_cake_version = '0.5.0'
    implementation "co.zsmb:rainbow-cake-core:$rainbow_cake_version"
    implementation "co.zsmb:rainbow-cake-dagger:$rainbow_cake_version"
    implementation "co.zsmb:rainbow-cake-navigation:$rainbow_cake_version"
    implementation "co.zsmb:rainbow-cake-timber:$rainbow_cake_version"

    // Coroutines
    def coroutines_version = '1.3.0'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    // Dagger
    def dagger_version = '2.26'
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kaptTest "com.google.dagger:dagger-compiler:$dagger_version"

    // Room
    def room_version = '2.2.4'
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // Networking
    def okhttp_version = '4.4.0'
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    def retrofit_version = '2.7.2'
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    def moshi_version = '1.9.2'
    implementation "com.squareup.moshi:moshi:$moshi_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"

    // Image loading
    implementation 'com.github.bumptech.glide:glide:4.10.0'

    // Testing
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
